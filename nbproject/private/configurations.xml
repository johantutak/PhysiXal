<?xml version="1.0" encoding="UTF-8"?>
<configurationDescriptor version="100">
  <logicalFolder name="root" displayName="root" projectFiles="true" kind="ROOT">
    <df root="." name="0">
      <df name="bin">
        <df name="Debug-linux-x86_64">
          <df name="Example">
          </df>
          <df name="PhysiXal">
          </df>
        </df>
      </df>
      <df name="bin-int">
        <df name="Debug-linux-x86_64">
          <df name="Example">
          </df>
          <df name="PhysiXal">
          </df>
        </df>
      </df>
      <df name="Example">
        <df name="assets">
          <df name="shaders">
          </df>
        </df>
        <df name="src">
          <in>example_game.cpp</in>
          <in>example_game.h</in>
          <in>game_app.cpp</in>
        </df>
      </df>
      <df name="PhysiXal">
        <df name="src">
          <df name="core">
            <df name="input">
              <in>input.cpp</in>
              <in>input.h</in>
              <in>key_codes.h</in>
              <in>mouse_codes.h</in>
            </df>
            <in>application.cpp</in>
            <in>application.h</in>
            <in>core.h</in>
            <in>core_layer.cpp</in>
            <in>core_layer.h</in>
            <in>entry_point.h</in>
            <in>layer_stack.cpp</in>
            <in>layer_stack.h</in>
            <in>physixal.h</in>
            <in>timestep.h</in>
            <in>window.cpp</in>
            <in>window.h</in>
          </df>
          <df name="events">
            <in>app_event.h</in>
            <in>event.h</in>
            <in>key_event.h</in>
            <in>mouse_event.h</in>
          </df>
          <df name="log">
            <in>log.cpp</in>
            <in>log.h</in>
          </df>
          <df name="main">
            <in>log.cpp</in>
          </df>
          <df name="platform">
            <df name="lnx">
              <in>lnx_window.cpp</in>
              <in>lnx_window.h</in>
            </df>
            <df name="win">
              <in>win_input.cpp</in>
              <in>win_input.h</in>
              <in>win_window.cpp</in>
              <in>win_window.h</in>
            </df>
          </df>
          <in>px_pch.cpp</in>
          <in>px_pch.h</in>
        </df>
        <df name="thirdparty">
          <df name="GLFW">
            <df name=".github">
              <df name="workflows">
              </df>
            </df>
            <df name="bin">
              <df name="Debug-windows-x86_64">
                <df name="GLFW">
                </df>
              </df>
              <df name="Dist-windows-x86_64">
                <df name="GLFW">
                </df>
              </df>
              <df name="Release-windows-x86_64">
                <df name="GLFW">
                </df>
              </df>
            </df>
            <df name="bin-int">
              <df name="Debug-windows-x86_64">
                <df name="GLFW">
                  <df name="GLFW.tlog">
                  </df>
                </df>
              </df>
              <df name="Dist-windows-x86_64">
                <df name="GLFW">
                  <df name="GLFW.tlog">
                  </df>
                </df>
              </df>
              <df name="Release-windows-x86_64">
                <df name="GLFW">
                  <df name="GLFW.tlog">
                  </df>
                </df>
              </df>
            </df>
            <df name="CMake">
              <df name="modules">
              </df>
            </df>
            <df name="deps">
              <df name="glad">
                <in>gl.h</in>
                <in>gles2.h</in>
                <in>vulkan.h</in>
              </df>
              <df name="mingw">
                <in>_mingw_dxhelper.h</in>
                <in>dinput.h</in>
                <in>xinput.h</in>
              </df>
              <df name="vs2008">
                <in>stdint.h</in>
              </df>
              <in>getopt.c</in>
              <in>getopt.h</in>
              <in>linmath.h</in>
              <in>nuklear.h</in>
              <in>nuklear_glfw_gl2.h</in>
              <in>stb_image_write.h</in>
              <in>tinycthread.c</in>
              <in>tinycthread.h</in>
            </df>
            <df name="docs">
            </df>
            <df name="examples">
              <in>boing.c</in>
              <in>gears.c</in>
              <in>heightmap.c</in>
              <in>offscreen.c</in>
              <in>particles.c</in>
              <in>sharing.c</in>
              <in>splitview.c</in>
              <in>triangle-opengl.c</in>
              <in>triangle-opengles.c</in>
              <in>wave.c</in>
              <in>windows.c</in>
            </df>
            <df name="include">
              <df name="GLFW">
                <in>glfw3.h</in>
                <in>glfw3native.h</in>
              </df>
            </df>
            <df name="src">
              <in>cocoa_init.m</in>
              <in>cocoa_joystick.h</in>
              <in>cocoa_joystick.m</in>
              <in>cocoa_monitor.m</in>
              <in>cocoa_platform.h</in>
              <in>cocoa_time.c</in>
              <in>cocoa_time.h</in>
              <in>cocoa_window.m</in>
              <in>context.c</in>
              <in>egl_context.c</in>
              <in>glx_context.c</in>
              <in>init.c</in>
              <in>input.c</in>
              <in>internal.h</in>
              <in>linux_joystick.c</in>
              <in>linux_joystick.h</in>
              <in>mappings.h</in>
              <in>monitor.c</in>
              <in>nsgl_context.m</in>
              <in>null_init.c</in>
              <in>null_joystick.c</in>
              <in>null_joystick.h</in>
              <in>null_monitor.c</in>
              <in>null_platform.h</in>
              <in>null_window.c</in>
              <in>osmesa_context.c</in>
              <in>platform.c</in>
              <in>platform.h</in>
              <in>posix_module.c</in>
              <in>posix_thread.c</in>
              <in>posix_thread.h</in>
              <in>posix_time.c</in>
              <in>posix_time.h</in>
              <in>vulkan.c</in>
              <in>wgl_context.c</in>
              <in>win32_init.c</in>
              <in>win32_joystick.c</in>
              <in>win32_joystick.h</in>
              <in>win32_module.c</in>
              <in>win32_monitor.c</in>
              <in>win32_platform.h</in>
              <in>win32_thread.c</in>
              <in>win32_thread.h</in>
              <in>win32_time.c</in>
              <in>win32_time.h</in>
              <in>win32_window.c</in>
              <in>window.c</in>
              <in>wl_init.c</in>
              <in>wl_monitor.c</in>
              <in>wl_platform.h</in>
              <in>wl_window.c</in>
              <in>x11_init.c</in>
              <in>x11_monitor.c</in>
              <in>x11_platform.h</in>
              <in>x11_window.c</in>
              <in>xkb_unicode.c</in>
              <in>xkb_unicode.h</in>
            </df>
            <df name="tests">
              <in>allocator.c</in>
              <in>clipboard.c</in>
              <in>cursor.c</in>
              <in>empty.c</in>
              <in>events.c</in>
              <in>gamma.c</in>
              <in>glfwinfo.c</in>
              <in>icon.c</in>
              <in>iconify.c</in>
              <in>inputlag.c</in>
              <in>joysticks.c</in>
              <in>monitors.c</in>
              <in>msaa.c</in>
              <in>reopen.c</in>
              <in>tearing.c</in>
              <in>threads.c</in>
              <in>timeout.c</in>
              <in>title.c</in>
              <in>triangle-vulkan.c</in>
              <in>window.c</in>
            </df>
          </df>
          <df name="glm">
            <df name="cmake">
              <df name="glm">
              </df>
            </df>
            <df name="doc">
              <df name="api">
                <df name="search">
                </df>
              </df>
              <df name="manual">
              </df>
              <df name="theme">
              </df>
            </df>
            <df name="glm">
              <df name="detail">
                <in>_features.hpp</in>
                <in>_fixes.hpp</in>
                <in>_noise.hpp</in>
                <in>_swizzle.hpp</in>
                <in>_swizzle_func.hpp</in>
                <in>_vectorize.hpp</in>
                <in>compute_common.hpp</in>
                <in>compute_vector_relational.hpp</in>
                <in>glm.cpp</in>
                <in>qualifier.hpp</in>
                <in>setup.hpp</in>
                <in>type_float.hpp</in>
                <in>type_half.hpp</in>
                <in>type_mat2x2.hpp</in>
                <in>type_mat2x3.hpp</in>
                <in>type_mat2x4.hpp</in>
                <in>type_mat3x2.hpp</in>
                <in>type_mat3x3.hpp</in>
                <in>type_mat3x4.hpp</in>
                <in>type_mat4x2.hpp</in>
                <in>type_mat4x3.hpp</in>
                <in>type_mat4x4.hpp</in>
                <in>type_quat.hpp</in>
                <in>type_vec1.hpp</in>
                <in>type_vec2.hpp</in>
                <in>type_vec3.hpp</in>
                <in>type_vec4.hpp</in>
              </df>
              <df name="ext">
                <in>matrix_clip_space.hpp</in>
                <in>matrix_common.hpp</in>
                <in>matrix_double2x2.hpp</in>
                <in>matrix_double2x2_precision.hpp</in>
                <in>matrix_double2x3.hpp</in>
                <in>matrix_double2x3_precision.hpp</in>
                <in>matrix_double2x4.hpp</in>
                <in>matrix_double2x4_precision.hpp</in>
                <in>matrix_double3x2.hpp</in>
                <in>matrix_double3x2_precision.hpp</in>
                <in>matrix_double3x3.hpp</in>
                <in>matrix_double3x3_precision.hpp</in>
                <in>matrix_double3x4.hpp</in>
                <in>matrix_double3x4_precision.hpp</in>
                <in>matrix_double4x2.hpp</in>
                <in>matrix_double4x2_precision.hpp</in>
                <in>matrix_double4x3.hpp</in>
                <in>matrix_double4x3_precision.hpp</in>
                <in>matrix_double4x4.hpp</in>
                <in>matrix_double4x4_precision.hpp</in>
                <in>matrix_float2x2.hpp</in>
                <in>matrix_float2x2_precision.hpp</in>
                <in>matrix_float2x3.hpp</in>
                <in>matrix_float2x3_precision.hpp</in>
                <in>matrix_float2x4.hpp</in>
                <in>matrix_float2x4_precision.hpp</in>
                <in>matrix_float3x2.hpp</in>
                <in>matrix_float3x2_precision.hpp</in>
                <in>matrix_float3x3.hpp</in>
                <in>matrix_float3x3_precision.hpp</in>
                <in>matrix_float3x4.hpp</in>
                <in>matrix_float3x4_precision.hpp</in>
                <in>matrix_float4x2.hpp</in>
                <in>matrix_float4x2_precision.hpp</in>
                <in>matrix_float4x3.hpp</in>
                <in>matrix_float4x3_precision.hpp</in>
                <in>matrix_float4x4.hpp</in>
                <in>matrix_float4x4_precision.hpp</in>
                <in>matrix_int2x2.hpp</in>
                <in>matrix_int2x2_sized.hpp</in>
                <in>matrix_int2x3.hpp</in>
                <in>matrix_int2x3_sized.hpp</in>
                <in>matrix_int2x4.hpp</in>
                <in>matrix_int2x4_sized.hpp</in>
                <in>matrix_int3x2.hpp</in>
                <in>matrix_int3x2_sized.hpp</in>
                <in>matrix_int3x3.hpp</in>
                <in>matrix_int3x3_sized.hpp</in>
                <in>matrix_int3x4.hpp</in>
                <in>matrix_int3x4_sized.hpp</in>
                <in>matrix_int4x2.hpp</in>
                <in>matrix_int4x2_sized.hpp</in>
                <in>matrix_int4x3.hpp</in>
                <in>matrix_int4x3_sized.hpp</in>
                <in>matrix_int4x4.hpp</in>
                <in>matrix_int4x4_sized.hpp</in>
                <in>matrix_projection.hpp</in>
                <in>matrix_relational.hpp</in>
                <in>matrix_transform.hpp</in>
                <in>matrix_uint2x2.hpp</in>
                <in>matrix_uint2x2_sized.hpp</in>
                <in>matrix_uint2x3.hpp</in>
                <in>matrix_uint2x3_sized.hpp</in>
                <in>matrix_uint2x4.hpp</in>
                <in>matrix_uint2x4_sized.hpp</in>
                <in>matrix_uint3x2.hpp</in>
                <in>matrix_uint3x2_sized.hpp</in>
                <in>matrix_uint3x3.hpp</in>
                <in>matrix_uint3x3_sized.hpp</in>
                <in>matrix_uint3x4.hpp</in>
                <in>matrix_uint3x4_sized.hpp</in>
                <in>matrix_uint4x2.hpp</in>
                <in>matrix_uint4x2_sized.hpp</in>
                <in>matrix_uint4x3.hpp</in>
                <in>matrix_uint4x3_sized.hpp</in>
                <in>matrix_uint4x4.hpp</in>
                <in>matrix_uint4x4_sized.hpp</in>
                <in>quaternion_common.hpp</in>
                <in>quaternion_double.hpp</in>
                <in>quaternion_double_precision.hpp</in>
                <in>quaternion_exponential.hpp</in>
                <in>quaternion_float.hpp</in>
                <in>quaternion_float_precision.hpp</in>
                <in>quaternion_geometric.hpp</in>
                <in>quaternion_relational.hpp</in>
                <in>quaternion_transform.hpp</in>
                <in>quaternion_trigonometric.hpp</in>
                <in>scalar_common.hpp</in>
                <in>scalar_constants.hpp</in>
                <in>scalar_int_sized.hpp</in>
                <in>scalar_integer.hpp</in>
                <in>scalar_packing.hpp</in>
                <in>scalar_relational.hpp</in>
                <in>scalar_uint_sized.hpp</in>
                <in>scalar_ulp.hpp</in>
                <in>vector_bool1.hpp</in>
                <in>vector_bool1_precision.hpp</in>
                <in>vector_bool2.hpp</in>
                <in>vector_bool2_precision.hpp</in>
                <in>vector_bool3.hpp</in>
                <in>vector_bool3_precision.hpp</in>
                <in>vector_bool4.hpp</in>
                <in>vector_bool4_precision.hpp</in>
                <in>vector_common.hpp</in>
                <in>vector_double1.hpp</in>
                <in>vector_double1_precision.hpp</in>
                <in>vector_double2.hpp</in>
                <in>vector_double2_precision.hpp</in>
                <in>vector_double3.hpp</in>
                <in>vector_double3_precision.hpp</in>
                <in>vector_double4.hpp</in>
                <in>vector_double4_precision.hpp</in>
                <in>vector_float1.hpp</in>
                <in>vector_float1_precision.hpp</in>
                <in>vector_float2.hpp</in>
                <in>vector_float2_precision.hpp</in>
                <in>vector_float3.hpp</in>
                <in>vector_float3_precision.hpp</in>
                <in>vector_float4.hpp</in>
                <in>vector_float4_precision.hpp</in>
                <in>vector_int1.hpp</in>
                <in>vector_int1_sized.hpp</in>
                <in>vector_int2.hpp</in>
                <in>vector_int2_sized.hpp</in>
                <in>vector_int3.hpp</in>
                <in>vector_int3_sized.hpp</in>
                <in>vector_int4.hpp</in>
                <in>vector_int4_sized.hpp</in>
                <in>vector_integer.hpp</in>
                <in>vector_packing.hpp</in>
                <in>vector_relational.hpp</in>
                <in>vector_uint1.hpp</in>
                <in>vector_uint1_sized.hpp</in>
                <in>vector_uint2.hpp</in>
                <in>vector_uint2_sized.hpp</in>
                <in>vector_uint3.hpp</in>
                <in>vector_uint3_sized.hpp</in>
                <in>vector_uint4.hpp</in>
                <in>vector_uint4_sized.hpp</in>
                <in>vector_ulp.hpp</in>
              </df>
              <df name="gtc">
                <in>bitfield.hpp</in>
                <in>color_space.hpp</in>
                <in>constants.hpp</in>
                <in>epsilon.hpp</in>
                <in>integer.hpp</in>
                <in>matrix_access.hpp</in>
                <in>matrix_integer.hpp</in>
                <in>matrix_inverse.hpp</in>
                <in>matrix_transform.hpp</in>
                <in>noise.hpp</in>
                <in>packing.hpp</in>
                <in>quaternion.hpp</in>
                <in>random.hpp</in>
                <in>reciprocal.hpp</in>
                <in>round.hpp</in>
                <in>type_aligned.hpp</in>
                <in>type_precision.hpp</in>
                <in>type_ptr.hpp</in>
                <in>ulp.hpp</in>
                <in>vec1.hpp</in>
              </df>
              <df name="gtx">
                <in>associated_min_max.hpp</in>
                <in>bit.hpp</in>
                <in>closest_point.hpp</in>
                <in>color_encoding.hpp</in>
                <in>color_space.hpp</in>
                <in>color_space_YCoCg.hpp</in>
                <in>common.hpp</in>
                <in>compatibility.hpp</in>
                <in>component_wise.hpp</in>
                <in>dual_quaternion.hpp</in>
                <in>easing.hpp</in>
                <in>euler_angles.hpp</in>
                <in>extend.hpp</in>
                <in>extended_min_max.hpp</in>
                <in>exterior_product.hpp</in>
                <in>fast_exponential.hpp</in>
                <in>fast_square_root.hpp</in>
                <in>fast_trigonometry.hpp</in>
                <in>functions.hpp</in>
                <in>gradient_paint.hpp</in>
                <in>handed_coordinate_space.hpp</in>
                <in>hash.hpp</in>
                <in>integer.hpp</in>
                <in>intersect.hpp</in>
                <in>io.hpp</in>
                <in>log_base.hpp</in>
                <in>matrix_cross_product.hpp</in>
                <in>matrix_decompose.hpp</in>
                <in>matrix_factorisation.hpp</in>
                <in>matrix_interpolation.hpp</in>
                <in>matrix_major_storage.hpp</in>
                <in>matrix_operation.hpp</in>
                <in>matrix_query.hpp</in>
                <in>matrix_transform_2d.hpp</in>
                <in>mixed_product.hpp</in>
                <in>norm.hpp</in>
                <in>normal.hpp</in>
                <in>normalize_dot.hpp</in>
                <in>number_precision.hpp</in>
                <in>optimum_pow.hpp</in>
                <in>orthonormalize.hpp</in>
                <in>perpendicular.hpp</in>
                <in>polar_coordinates.hpp</in>
                <in>projection.hpp</in>
                <in>quaternion.hpp</in>
                <in>range.hpp</in>
                <in>raw_data.hpp</in>
                <in>rotate_normalized_axis.hpp</in>
                <in>rotate_vector.hpp</in>
                <in>scalar_multiplication.hpp</in>
                <in>scalar_relational.hpp</in>
                <in>spline.hpp</in>
                <in>std_based_type.hpp</in>
                <in>string_cast.hpp</in>
                <in>texture.hpp</in>
                <in>transform.hpp</in>
                <in>transform2.hpp</in>
                <in>type_aligned.hpp</in>
                <in>type_trait.hpp</in>
                <in>vec_swizzle.hpp</in>
                <in>vector_angle.hpp</in>
                <in>vector_query.hpp</in>
                <in>wrap.hpp</in>
              </df>
              <df name="simd">
                <in>common.h</in>
                <in>exponential.h</in>
                <in>geometric.h</in>
                <in>integer.h</in>
                <in>matrix.h</in>
                <in>neon.h</in>
                <in>packing.h</in>
                <in>platform.h</in>
                <in>trigonometric.h</in>
                <in>vector_relational.h</in>
              </df>
              <in>common.hpp</in>
              <in>exponential.hpp</in>
              <in>ext.hpp</in>
              <in>fwd.hpp</in>
              <in>geometric.hpp</in>
              <in>glm.hpp</in>
              <in>integer.hpp</in>
              <in>mat2x2.hpp</in>
              <in>mat2x3.hpp</in>
              <in>mat2x4.hpp</in>
              <in>mat3x2.hpp</in>
              <in>mat3x3.hpp</in>
              <in>mat3x4.hpp</in>
              <in>mat4x2.hpp</in>
              <in>mat4x3.hpp</in>
              <in>mat4x4.hpp</in>
              <in>matrix.hpp</in>
              <in>packing.hpp</in>
              <in>trigonometric.hpp</in>
              <in>vec2.hpp</in>
              <in>vec3.hpp</in>
              <in>vec4.hpp</in>
              <in>vector_relational.hpp</in>
            </df>
            <df name="test">
              <df name="bug">
                <in>bug_ms_vec_static.cpp</in>
              </df>
              <df name="cmake">
                <in>test_find_glm.cpp</in>
              </df>
              <df name="core">
                <in>core_cpp_constexpr.cpp</in>
                <in>core_cpp_defaulted_ctor.cpp</in>
                <in>core_force_aligned_gentypes.cpp</in>
                <in>core_force_arch_unknown.cpp</in>
                <in>core_force_compiler_unknown.cpp</in>
                <in>core_force_ctor_init.cpp</in>
                <in>core_force_cxx03.cpp</in>
                <in>core_force_cxx98.cpp</in>
                <in>core_force_cxx_unknown.cpp</in>
                <in>core_force_depth_zero_to_one.cpp</in>
                <in>core_force_explicit_ctor.cpp</in>
                <in>core_force_inline.cpp</in>
                <in>core_force_left_handed.cpp</in>
                <in>core_force_platform_unknown.cpp</in>
                <in>core_force_pure.cpp</in>
                <in>core_force_quat_wxyz.cpp</in>
                <in>core_force_size_t_length.cpp</in>
                <in>core_force_unrestricted_gentype.cpp</in>
                <in>core_force_xyzw_only.cpp</in>
                <in>core_func_common.cpp</in>
                <in>core_func_exponential.cpp</in>
                <in>core_func_geometric.cpp</in>
                <in>core_func_integer.cpp</in>
                <in>core_func_integer_bit_count.cpp</in>
                <in>core_func_integer_find_lsb.cpp</in>
                <in>core_func_integer_find_msb.cpp</in>
                <in>core_func_matrix.cpp</in>
                <in>core_func_noise.cpp</in>
                <in>core_func_packing.cpp</in>
                <in>core_func_swizzle.cpp</in>
                <in>core_func_trigonometric.cpp</in>
                <in>core_func_vector_relational.cpp</in>
                <in>core_setup_force_cxx98.cpp</in>
                <in>core_setup_force_size_t_length.cpp</in>
                <in>core_setup_message.cpp</in>
                <in>core_setup_platform_unknown.cpp</in>
                <in>core_setup_precision.cpp</in>
                <in>core_type_aligned.cpp</in>
                <in>core_type_cast.cpp</in>
                <in>core_type_ctor.cpp</in>
                <in>core_type_int.cpp</in>
                <in>core_type_length.cpp</in>
                <in>core_type_mat2x2.cpp</in>
                <in>core_type_mat2x3.cpp</in>
                <in>core_type_mat2x4.cpp</in>
                <in>core_type_mat3x2.cpp</in>
                <in>core_type_mat3x3.cpp</in>
                <in>core_type_mat3x4.cpp</in>
                <in>core_type_mat4x2.cpp</in>
                <in>core_type_mat4x3.cpp</in>
                <in>core_type_mat4x4.cpp</in>
                <in>core_type_vec1.cpp</in>
                <in>core_type_vec2.cpp</in>
                <in>core_type_vec3.cpp</in>
                <in>core_type_vec4.cpp</in>
              </df>
              <df name="ext">
                <in>ext_matrix_clip_space.cpp</in>
                <in>ext_matrix_common.cpp</in>
                <in>ext_matrix_int2x2_sized.cpp</in>
                <in>ext_matrix_int2x3_sized.cpp</in>
                <in>ext_matrix_int2x4_sized.cpp</in>
                <in>ext_matrix_int3x2_sized.cpp</in>
                <in>ext_matrix_int3x3_sized.cpp</in>
                <in>ext_matrix_int3x4_sized.cpp</in>
                <in>ext_matrix_int4x2_sized.cpp</in>
                <in>ext_matrix_int4x3_sized.cpp</in>
                <in>ext_matrix_int4x4_sized.cpp</in>
                <in>ext_matrix_projection.cpp</in>
                <in>ext_matrix_relational.cpp</in>
                <in>ext_matrix_transform.cpp</in>
                <in>ext_matrix_uint2x2_sized.cpp</in>
                <in>ext_matrix_uint2x3_sized.cpp</in>
                <in>ext_matrix_uint2x4_sized.cpp</in>
                <in>ext_matrix_uint3x2_sized.cpp</in>
                <in>ext_matrix_uint3x3_sized.cpp</in>
                <in>ext_matrix_uint3x4_sized.cpp</in>
                <in>ext_matrix_uint4x2_sized.cpp</in>
                <in>ext_matrix_uint4x3_sized.cpp</in>
                <in>ext_matrix_uint4x4_sized.cpp</in>
                <in>ext_quaternion_common.cpp</in>
                <in>ext_quaternion_exponential.cpp</in>
                <in>ext_quaternion_geometric.cpp</in>
                <in>ext_quaternion_relational.cpp</in>
                <in>ext_quaternion_transform.cpp</in>
                <in>ext_quaternion_trigonometric.cpp</in>
                <in>ext_quaternion_type.cpp</in>
                <in>ext_scalar_common.cpp</in>
                <in>ext_scalar_constants.cpp</in>
                <in>ext_scalar_int_sized.cpp</in>
                <in>ext_scalar_integer.cpp</in>
                <in>ext_scalar_packing.cpp</in>
                <in>ext_scalar_relational.cpp</in>
                <in>ext_scalar_uint_sized.cpp</in>
                <in>ext_scalar_ulp.cpp</in>
                <in>ext_vec1.cpp</in>
                <in>ext_vector_bool1.cpp</in>
                <in>ext_vector_common.cpp</in>
                <in>ext_vector_iec559.cpp</in>
                <in>ext_vector_int1_sized.cpp</in>
                <in>ext_vector_int2_sized.cpp</in>
                <in>ext_vector_int3_sized.cpp</in>
                <in>ext_vector_int4_sized.cpp</in>
                <in>ext_vector_integer.cpp</in>
                <in>ext_vector_integer_sized.cpp</in>
                <in>ext_vector_packing.cpp</in>
                <in>ext_vector_relational.cpp</in>
                <in>ext_vector_uint1_sized.cpp</in>
                <in>ext_vector_uint2_sized.cpp</in>
                <in>ext_vector_uint3_sized.cpp</in>
                <in>ext_vector_uint4_sized.cpp</in>
                <in>ext_vector_ulp.cpp</in>
              </df>
              <df name="gtc">
                <in>gtc_bitfield.cpp</in>
                <in>gtc_color_space.cpp</in>
                <in>gtc_constants.cpp</in>
                <in>gtc_epsilon.cpp</in>
                <in>gtc_integer.cpp</in>
                <in>gtc_matrix_access.cpp</in>
                <in>gtc_matrix_integer.cpp</in>
                <in>gtc_matrix_inverse.cpp</in>
                <in>gtc_matrix_transform.cpp</in>
                <in>gtc_noise.cpp</in>
                <in>gtc_packing.cpp</in>
                <in>gtc_quaternion.cpp</in>
                <in>gtc_random.cpp</in>
                <in>gtc_reciprocal.cpp</in>
                <in>gtc_round.cpp</in>
                <in>gtc_type_aligned.cpp</in>
                <in>gtc_type_precision.cpp</in>
                <in>gtc_type_ptr.cpp</in>
                <in>gtc_ulp.cpp</in>
                <in>gtc_user_defined_types.cpp</in>
                <in>gtc_vec1.cpp</in>
              </df>
              <df name="gtx">
                <in>gtx.cpp</in>
                <in>gtx_associated_min_max.cpp</in>
                <in>gtx_closest_point.cpp</in>
                <in>gtx_color_encoding.cpp</in>
                <in>gtx_color_space.cpp</in>
                <in>gtx_color_space_YCoCg.cpp</in>
                <in>gtx_common.cpp</in>
                <in>gtx_compatibility.cpp</in>
                <in>gtx_component_wise.cpp</in>
                <in>gtx_dual_quaternion.cpp</in>
                <in>gtx_easing.cpp</in>
                <in>gtx_euler_angle.cpp</in>
                <in>gtx_extend.cpp</in>
                <in>gtx_extended_min_max.cpp</in>
                <in>gtx_extented_min_max.cpp</in>
                <in>gtx_exterior_product.cpp</in>
                <in>gtx_fast_exponential.cpp</in>
                <in>gtx_fast_square_root.cpp</in>
                <in>gtx_fast_trigonometry.cpp</in>
                <in>gtx_functions.cpp</in>
                <in>gtx_gradient_paint.cpp</in>
                <in>gtx_handed_coordinate_space.cpp</in>
                <in>gtx_int_10_10_10_2.cpp</in>
                <in>gtx_integer.cpp</in>
                <in>gtx_intersect.cpp</in>
                <in>gtx_io.cpp</in>
                <in>gtx_load.cpp</in>
                <in>gtx_log_base.cpp</in>
                <in>gtx_matrix_cross_product.cpp</in>
                <in>gtx_matrix_decompose.cpp</in>
                <in>gtx_matrix_factorisation.cpp</in>
                <in>gtx_matrix_interpolation.cpp</in>
                <in>gtx_matrix_major_storage.cpp</in>
                <in>gtx_matrix_operation.cpp</in>
                <in>gtx_matrix_query.cpp</in>
                <in>gtx_matrix_transform_2d.cpp</in>
                <in>gtx_mixed_product.cpp</in>
                <in>gtx_norm.cpp</in>
                <in>gtx_normal.cpp</in>
                <in>gtx_normalize_dot.cpp</in>
                <in>gtx_number_precision.cpp</in>
                <in>gtx_optimum_pow.cpp</in>
                <in>gtx_orthonormalize.cpp</in>
                <in>gtx_perpendicular.cpp</in>
                <in>gtx_polar_coordinates.cpp</in>
                <in>gtx_projection.cpp</in>
                <in>gtx_quaternion.cpp</in>
                <in>gtx_random.cpp</in>
                <in>gtx_range.cpp</in>
                <in>gtx_rotate_normalized_axis.cpp</in>
                <in>gtx_rotate_vector.cpp</in>
                <in>gtx_scalar_multiplication.cpp</in>
                <in>gtx_scalar_relational.cpp</in>
                <in>gtx_simd_mat4.cpp</in>
                <in>gtx_simd_vec4.cpp</in>
                <in>gtx_spline.cpp</in>
                <in>gtx_string_cast.cpp</in>
                <in>gtx_texture.cpp</in>
                <in>gtx_type_aligned.cpp</in>
                <in>gtx_type_trait.cpp</in>
                <in>gtx_vec_swizzle.cpp</in>
                <in>gtx_vector_angle.cpp</in>
                <in>gtx_vector_query.cpp</in>
                <in>gtx_wrap.cpp</in>
              </df>
              <df name="perf">
                <in>perf_matrix_div.cpp</in>
                <in>perf_matrix_inverse.cpp</in>
                <in>perf_matrix_mul.cpp</in>
                <in>perf_matrix_mul_vector.cpp</in>
                <in>perf_matrix_transpose.cpp</in>
                <in>perf_vector_mul_matrix.cpp</in>
              </df>
            </df>
            <df name="util">
            </df>
          </df>
          <df name="imgui">
            <df name=".github">
              <df name="workflows">
              </df>
            </df>
            <df name="backends">
              <df name="vulkan">
              </df>
              <in>imgui_impl_allegro5.cpp</in>
              <in>imgui_impl_allegro5.h</in>
              <in>imgui_impl_android.cpp</in>
              <in>imgui_impl_android.h</in>
              <in>imgui_impl_dx10.cpp</in>
              <in>imgui_impl_dx10.h</in>
              <in>imgui_impl_dx11.cpp</in>
              <in>imgui_impl_dx11.h</in>
              <in>imgui_impl_dx12.cpp</in>
              <in>imgui_impl_dx12.h</in>
              <in>imgui_impl_dx9.cpp</in>
              <in>imgui_impl_dx9.h</in>
              <in>imgui_impl_glfw.cpp</in>
              <in>imgui_impl_glfw.h</in>
              <in>imgui_impl_glut.cpp</in>
              <in>imgui_impl_glut.h</in>
              <in>imgui_impl_metal.h</in>
              <in>imgui_impl_metal.mm</in>
              <in>imgui_impl_opengl2.cpp</in>
              <in>imgui_impl_opengl2.h</in>
              <in>imgui_impl_opengl3.cpp</in>
              <in>imgui_impl_opengl3.h</in>
              <in>imgui_impl_opengl3_loader.h</in>
              <in>imgui_impl_osx.h</in>
              <in>imgui_impl_osx.mm</in>
              <in>imgui_impl_sdl.cpp</in>
              <in>imgui_impl_sdl.h</in>
              <in>imgui_impl_sdlrenderer.cpp</in>
              <in>imgui_impl_sdlrenderer.h</in>
              <in>imgui_impl_vulkan.cpp</in>
              <in>imgui_impl_vulkan.h</in>
              <in>imgui_impl_wgpu.cpp</in>
              <in>imgui_impl_wgpu.h</in>
              <in>imgui_impl_win32.cpp</in>
              <in>imgui_impl_win32.h</in>
            </df>
            <df name="bin">
              <df name="Debug-linux-x86_64">
                <df name="ImGui">
                </df>
              </df>
            </df>
            <df name="bin-int">
              <df name="Debug-linux-x86_64">
                <df name="ImGui">
                </df>
              </df>
            </df>
            <df name="docs">
            </df>
            <df name="examples">
              <df name="example_allegro5">
                <in>imconfig_allegro5.h</in>
                <in>main.cpp</in>
              </df>
              <df name="example_android_opengl3">
                <df name="android">
                  <df name="app">
                    <df name="src">
                      <df name="main">
                        <df name="java">
                        </df>
                      </df>
                    </df>
                  </df>
                </df>
                <in>main.cpp</in>
              </df>
              <df name="example_apple_metal">
                <df name="example_apple_metal.xcodeproj">
                </df>
                <df name="iOS">
                </df>
                <df name="macOS">
                </df>
                <in>main.mm</in>
              </df>
              <df name="example_apple_opengl2">
                <df name="example_apple_opengl2.xcodeproj">
                </df>
                <in>main.mm</in>
              </df>
              <df name="example_emscripten_opengl3">
                <in>main.cpp</in>
              </df>
              <df name="example_emscripten_wgpu">
                <df name="web">
                </df>
                <in>main.cpp</in>
              </df>
              <df name="example_glfw_metal">
                <in>main.mm</in>
              </df>
              <df name="example_glfw_opengl2">
                <in>main.cpp</in>
              </df>
              <df name="example_glfw_opengl3">
                <in>main.cpp</in>
              </df>
              <df name="example_glfw_vulkan">
                <in>main.cpp</in>
              </df>
              <df name="example_glut_opengl2">
                <in>main.cpp</in>
              </df>
              <df name="example_null">
                <in>main.cpp</in>
              </df>
              <df name="example_sdl_directx11">
                <in>main.cpp</in>
              </df>
              <df name="example_sdl_metal">
                <in>main.mm</in>
              </df>
              <df name="example_sdl_opengl2">
                <in>main.cpp</in>
              </df>
              <df name="example_sdl_opengl3">
                <in>main.cpp</in>
              </df>
              <df name="example_sdl_sdlrenderer">
                <in>main.cpp</in>
              </df>
              <df name="example_sdl_vulkan">
                <in>main.cpp</in>
              </df>
              <df name="example_win32_directx10">
                <in>main.cpp</in>
              </df>
              <df name="example_win32_directx11">
                <in>main.cpp</in>
              </df>
              <df name="example_win32_directx12">
                <in>main.cpp</in>
              </df>
              <df name="example_win32_directx9">
                <in>main.cpp</in>
              </df>
              <df name="libs">
                <df name="glfw">
                  <df name="include">
                    <df name="GLFW">
                      <in>glfw3.h</in>
                      <in>glfw3native.h</in>
                    </df>
                  </df>
                  <df name="lib-vc2010-32">
                  </df>
                  <df name="lib-vc2010-64">
                  </df>
                </df>
                <df name="usynergy">
                  <in>uSynergy.c</in>
                  <in>uSynergy.h</in>
                </df>
              </df>
            </df>
            <df name="misc">
              <df name="cpp">
                <in>imgui_stdlib.cpp</in>
                <in>imgui_stdlib.h</in>
              </df>
              <df name="debuggers">
              </df>
              <df name="fonts">
                <in>binary_to_compressed_c.cpp</in>
              </df>
              <df name="freetype">
                <in>imgui_freetype.cpp</in>
                <in>imgui_freetype.h</in>
              </df>
              <df name="single_file">
                <in>imgui_single_file.h</in>
              </df>
            </df>
            <in>imconfig.h</in>
            <in>imgui.cpp</in>
            <in>imgui.h</in>
            <in>imgui_demo.cpp</in>
            <in>imgui_draw.cpp</in>
            <in>imgui_internal.h</in>
            <in>imgui_tables.cpp</in>
            <in>imgui_widgets.cpp</in>
            <in>imstb_rectpack.h</in>
            <in>imstb_textedit.h</in>
            <in>imstb_truetype.h</in>
          </df>
          <df name="spdlog">
            <df name="bench">
              <in>async_bench.cpp</in>
              <in>bench.cpp</in>
              <in>formatter-bench.cpp</in>
              <in>latency.cpp</in>
              <in>utils.h</in>
            </df>
            <df name="cmake">
            </df>
            <df name="example">
              <in>example.cpp</in>
            </df>
            <df name="include">
              <df name="spdlog">
                <df name="cfg">
                  <in>argv.h</in>
                  <in>env.h</in>
                  <in>helpers-inl.h</in>
                  <in>helpers.h</in>
                </df>
                <df name="details">
                  <in>backtracer-inl.h</in>
                  <in>backtracer.h</in>
                  <in>circular_q.h</in>
                  <in>console_globals.h</in>
                  <in>file_helper-inl.h</in>
                  <in>file_helper.h</in>
                  <in>fmt_helper.h</in>
                  <in>log_msg-inl.h</in>
                  <in>log_msg.h</in>
                  <in>log_msg_buffer-inl.h</in>
                  <in>log_msg_buffer.h</in>
                  <in>mpmc_blocking_q.h</in>
                  <in>null_mutex.h</in>
                  <in>os-inl.h</in>
                  <in>os.h</in>
                  <in>periodic_worker-inl.h</in>
                  <in>periodic_worker.h</in>
                  <in>registry-inl.h</in>
                  <in>registry.h</in>
                  <in>synchronous_factory.h</in>
                  <in>tcp_client-windows.h</in>
                  <in>tcp_client.h</in>
                  <in>thread_pool-inl.h</in>
                  <in>thread_pool.h</in>
                  <in>udp_client-windows.h</in>
                  <in>udp_client.h</in>
                  <in>windows_include.h</in>
                </df>
                <df name="fmt">
                  <df name="bundled">
                    <in>args.h</in>
                    <in>chrono.h</in>
                    <in>color.h</in>
                    <in>compile.h</in>
                    <in>core.h</in>
                    <in>format-inl.h</in>
                    <in>format.h</in>
                    <in>locale.h</in>
                    <in>os.h</in>
                    <in>ostream.h</in>
                    <in>printf.h</in>
                    <in>ranges.h</in>
                    <in>xchar.h</in>
                  </df>
                  <in>bin_to_hex.h</in>
                  <in>chrono.h</in>
                  <in>compile.h</in>
                  <in>fmt.h</in>
                  <in>ostr.h</in>
                  <in>ranges.h</in>
                  <in>xchar.h</in>
                </df>
                <df name="sinks">
                  <in>android_sink.h</in>
                  <in>ansicolor_sink-inl.h</in>
                  <in>ansicolor_sink.h</in>
                  <in>base_sink-inl.h</in>
                  <in>base_sink.h</in>
                  <in>basic_file_sink-inl.h</in>
                  <in>basic_file_sink.h</in>
                  <in>daily_file_sink.h</in>
                  <in>dist_sink.h</in>
                  <in>dup_filter_sink.h</in>
                  <in>hourly_file_sink.h</in>
                  <in>mongo_sink.h</in>
                  <in>msvc_sink.h</in>
                  <in>null_sink.h</in>
                  <in>ostream_sink.h</in>
                  <in>qt_sinks.h</in>
                  <in>ringbuffer_sink.h</in>
                  <in>rotating_file_sink-inl.h</in>
                  <in>rotating_file_sink.h</in>
                  <in>sink-inl.h</in>
                  <in>sink.h</in>
                  <in>stdout_color_sinks-inl.h</in>
                  <in>stdout_color_sinks.h</in>
                  <in>stdout_sinks-inl.h</in>
                  <in>stdout_sinks.h</in>
                  <in>syslog_sink.h</in>
                  <in>systemd_sink.h</in>
                  <in>tcp_sink.h</in>
                  <in>udp_sink.h</in>
                  <in>win_eventlog_sink.h</in>
                  <in>wincolor_sink-inl.h</in>
                  <in>wincolor_sink.h</in>
                </df>
                <in>async.h</in>
                <in>async_logger-inl.h</in>
                <in>async_logger.h</in>
                <in>common-inl.h</in>
                <in>common.h</in>
                <in>formatter.h</in>
                <in>fwd.h</in>
                <in>logger-inl.h</in>
                <in>logger.h</in>
                <in>pattern_formatter-inl.h</in>
                <in>pattern_formatter.h</in>
                <in>spdlog-inl.h</in>
                <in>spdlog.h</in>
                <in>stopwatch.h</in>
                <in>tweakme.h</in>
                <in>version.h</in>
              </df>
            </df>
            <df name="logos">
            </df>
            <df name="scripts">
            </df>
            <df name="src">
              <in>async.cpp</in>
              <in>cfg.cpp</in>
              <in>color_sinks.cpp</in>
              <in>file_sinks.cpp</in>
              <in>fmt.cpp</in>
              <in>spdlog.cpp</in>
              <in>stdout_sinks.cpp</in>
            </df>
            <df name="tests">
              <in>catch.hpp</in>
              <in>includes.h</in>
              <in>main.cpp</in>
              <in>test_async.cpp</in>
              <in>test_backtrace.cpp</in>
              <in>test_cfg.cpp</in>
              <in>test_create_dir.cpp</in>
              <in>test_daily_logger.cpp</in>
              <in>test_dup_filter.cpp</in>
              <in>test_errors.cpp</in>
              <in>test_eventlog.cpp</in>
              <in>test_file_helper.cpp</in>
              <in>test_file_logging.cpp</in>
              <in>test_fmt_helper.cpp</in>
              <in>test_macros.cpp</in>
              <in>test_misc.cpp</in>
              <in>test_mpmc_q.cpp</in>
              <in>test_pattern_formatter.cpp</in>
              <in>test_registry.cpp</in>
              <in>test_sink.h</in>
              <in>test_stdout_api.cpp</in>
              <in>test_stopwatch.cpp</in>
              <in>test_systemd.cpp</in>
              <in>test_time_point.cpp</in>
              <in>utils.cpp</in>
              <in>utils.h</in>
            </df>
          </df>
          <df name="Vulkan">
            <df name="include">
              <df name="dxc">
                <in>dxcapi.h</in>
              </df>
              <df name="glslang">
                <df name="Include">
                  <in>BaseTypes.h</in>
                  <in>Common.h</in>
                  <in>ConstantUnion.h</in>
                  <in>PoolAlloc.h</in>
                  <in>ResourceLimits.h</in>
                  <in>SpirvIntrinsics.h</in>
                  <in>Types.h</in>
                  <in>arrays.h</in>
                  <in>intermediate.h</in>
                </df>
                <df name="MachineIndependent">
                  <in>Versions.h</in>
                  <in>localintermediate.h</in>
                </df>
                <df name="Public">
                  <in>ShaderLang.h</in>
                </df>
                <df name="SPIRV">
                  <in>GlslangToSpv.h</in>
                  <in>Logger.h</in>
                  <in>SPVRemapper.h</in>
                  <in>SpvTools.h</in>
                  <in>spirv.hpp</in>
                  <in>spvIR.h</in>
                </df>
              </df>
              <df name="shaderc">
                <in>env.h</in>
                <in>shaderc.h</in>
                <in>shaderc.hpp</in>
                <in>status.h</in>
                <in>visibility.h</in>
              </df>
              <df name="spirv-headers">
                <in>GLSL.std.450.h</in>
                <in>spirv.h</in>
                <in>spirv.hpp</in>
              </df>
              <df name="spirv-tools">
                <in>libspirv.h</in>
                <in>libspirv.hpp</in>
                <in>linker.hpp</in>
                <in>optimizer.hpp</in>
              </df>
              <df name="spirv_cross">
                <in>GLSL.std.450.h</in>
                <in>spirv.h</in>
                <in>spirv.hpp</in>
                <in>spirv_cfg.hpp</in>
                <in>spirv_common.hpp</in>
                <in>spirv_cross.hpp</in>
                <in>spirv_cross_c.h</in>
                <in>spirv_cross_containers.hpp</in>
                <in>spirv_cross_error_handling.hpp</in>
                <in>spirv_cross_parsed_ir.hpp</in>
                <in>spirv_glsl.hpp</in>
                <in>spirv_hlsl.hpp</in>
                <in>spirv_msl.hpp</in>
                <in>spirv_parser.hpp</in>
                <in>spirv_reflect.hpp</in>
              </df>
              <df name="vk_video">
                <in>vulkan_video_codec_h264std.h</in>
                <in>vulkan_video_codec_h264std_decode.h</in>
                <in>vulkan_video_codec_h264std_encode.h</in>
                <in>vulkan_video_codec_h265std.h</in>
                <in>vulkan_video_codec_h265std_decode.h</in>
                <in>vulkan_video_codec_h265std_encode.h</in>
                <in>vulkan_video_codecs_common.h</in>
              </df>
              <df name="vulkan">
                <in>vk_enum_string_helper.h</in>
                <in>vk_icd.h</in>
                <in>vk_layer.h</in>
                <in>vk_platform.h</in>
                <in>vk_sdk_platform.h</in>
                <in>vulkan.h</in>
                <in>vulkan.hpp</in>
                <in>vulkan_android.h</in>
                <in>vulkan_beta.h</in>
                <in>vulkan_core.h</in>
                <in>vulkan_directfb.h</in>
                <in>vulkan_enums.hpp</in>
                <in>vulkan_format_traits.hpp</in>
                <in>vulkan_fuchsia.h</in>
                <in>vulkan_funcs.hpp</in>
                <in>vulkan_ggp.h</in>
                <in>vulkan_handles.hpp</in>
                <in>vulkan_hash.hpp</in>
                <in>vulkan_ios.h</in>
                <in>vulkan_macos.h</in>
                <in>vulkan_metal.h</in>
                <in>vulkan_profiles.h</in>
                <in>vulkan_profiles.hpp</in>
                <in>vulkan_raii.hpp</in>
                <in>vulkan_screen.h</in>
                <in>vulkan_structs.hpp</in>
                <in>vulkan_to_string.hpp</in>
                <in>vulkan_vi.h</in>
                <in>vulkan_wayland.h</in>
                <in>vulkan_win32.h</in>
                <in>vulkan_xcb.h</in>
                <in>vulkan_xlib.h</in>
                <in>vulkan_xlib_xrandr.h</in>
              </df>
            </df>
            <df name="lib">
            </df>
          </df>
        </df>
      </df>
      <df name="scripts">
      </df>
      <df name="vendor">
        <df name="bin">
          <df name="premake">
          </df>
        </df>
      </df>
    </df>
  </logicalFolder>
  <projectmakefile>Makefile</projectmakefile>
  <confs>
    <conf name="Default" type="0">
      <toolsSet>
        <developmentServer>localhost</developmentServer>
        <platform>2</platform>
      </toolsSet>
      <compile>
        <compiledirpicklist>
          <compiledirpicklistitem>.</compiledirpicklistitem>
          <compiledirpicklistitem>${AUTO_FOLDER}</compiledirpicklistitem>
        </compiledirpicklist>
        <compiledir>${AUTO_FOLDER}</compiledir>
        <compilecommandpicklist>
          <compilecommandpicklistitem>${MAKE} ${ITEM_NAME}.o</compilecommandpicklistitem>
          <compilecommandpicklistitem>${AUTO_COMPILE}</compilecommandpicklistitem>
        </compilecommandpicklist>
        <compilecommand>${AUTO_COMPILE}</compilecommand>
      </compile>
      <dbx_gdbdebugger version="1">
        <gdb_pathmaps>
        </gdb_pathmaps>
        <gdb_interceptlist>
          <gdbinterceptoptions gdb_all="false" gdb_unhandled="true" gdb_unexpected="true"/>
        </gdb_interceptlist>
        <gdb_options>
          <DebugOptions>
          </DebugOptions>
        </gdb_options>
        <gdb_buildfirst gdb_buildfirst_overriden="false" gdb_buildfirst_old="false"/>
      </dbx_gdbdebugger>
      <nativedebugger version="1">
        <engine>gdb</engine>
      </nativedebugger>
      <runprofile version="9">
        <runcommandpicklist>
          <runcommandpicklistitem>"${OUTPUT_PATH}"</runcommandpicklistitem>
        </runcommandpicklist>
        <runcommand>"${OUTPUT_PATH}"</runcommand>
        <rundir>.</rundir>
        <buildfirst>false</buildfirst>
        <terminal-type>0</terminal-type>
        <remove-instrumentation>0</remove-instrumentation>
        <environment>
        </environment>
      </runprofile>
    </conf>
  </confs>
</configurationDescriptor>
