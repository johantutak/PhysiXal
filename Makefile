# Alternative GNU Make workspace makefile autogenerated by Premake

ifndef config
  config=debug
endif

ifndef verbose
  SILENT = @
endif

ifeq ($(config),debug)
  ImGui_config = debug
  PhysiXal_config = debug
  Example_config = debug

else ifeq ($(config),release)
  ImGui_config = release
  PhysiXal_config = release
  Example_config = release

else ifeq ($(config),dist)
  ImGui_config = dist
  PhysiXal_config = dist
  Example_config = dist

else
  $(error "invalid configuration $(config)")
endif

PROJECTS := ImGui PhysiXal Example

.PHONY: all clean help $(PROJECTS) Dependencies

all: $(PROJECTS)

Dependencies: ImGui

ImGui:
ifneq (,$(ImGui_config))
	@echo "==== Building ImGui ($(ImGui_config)) ===="
	@${MAKE} --no-print-directory -C PhysiXal/thirdparty/imgui -f Makefile config=$(ImGui_config)
endif

PhysiXal:
ifneq (,$(PhysiXal_config))
	@echo "==== Building PhysiXal ($(PhysiXal_config)) ===="
	@${MAKE} --no-print-directory -C PhysiXal -f Makefile config=$(PhysiXal_config)
endif

Example: PhysiXal
ifneq (,$(Example_config))
	@echo "==== Building Example ($(Example_config)) ===="
	@${MAKE} --no-print-directory -C Example -f Makefile config=$(Example_config)
endif

clean:
	@${MAKE} --no-print-directory -C PhysiXal/thirdparty/imgui -f Makefile clean
	@${MAKE} --no-print-directory -C PhysiXal -f Makefile clean
	@${MAKE} --no-print-directory -C Example -f Makefile clean

help:
	@echo "Usage: make [config=name] [target]"
	@echo ""
	@echo "CONFIGURATIONS:"
	@echo "  debug"
	@echo "  release"
	@echo "  dist"
	@echo ""
	@echo "TARGETS:"
	@echo "   all (default)"
	@echo "   clean"
	@echo "   ImGui"
	@echo "   PhysiXal"
	@echo "   Example"
	@echo ""
	@echo "For more information, see https://github.com/premake/premake-core/wiki"